# SPDX-FileCopyrightText: 2022 Daniele Tentoni <daniele.tentoni.1996@gmail.com
#
# SPDX-License-Identifier: MIT

name: Deploy with Semantic Release

on:
  push:
    branches:
      - main

jobs:
  # test:
  # uses: daniele-tentoni/cc-codechecker/.github/workflows/test.yml@main

  release:
    concurrency: release
    runs-on: ubuntu-latest
    # needs: ["test"]

    steps:
      - uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Python 3.9
        uses: actions/setup-python@v3.1.2
        with:
          python-version: "3.9"

      # - name: Upgrade pip
      # run: python -m pip install --upgrade pip

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/deploy.yml') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install

      - name: Prepare repo
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"

      - name: Publish
        run: |
          poetry run python -m semantic_release publish -v DEBUG -D commit_author="github-actions <action@github.com>"
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - uses: actions/upload-artifact@v3.0.0
        with:
          name: dist
          path: dist/

  deploy:
    needs: ["release"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.0

      - name: Login to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_MAIL }}
          justlogin: true

      - name: Deploy the dyno
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          docker_heroku_process_type: web
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_MAIL }}
          usedocker: true

  success-notification:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Send custom Telegram message
        uses: appleboy/telegram-action@2efd23283ae25229a0b4d315d5d33f73b346ef99
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.event_name }} event,
            on github.com/${{ github.repository }},
            <b>${{ github.event.head_commit.message }}</b>
            ✅ <b>SUCCEDED</b> ✅
            Hey! My developer has updated me with new features! Check them on Changelog on Github official repository!
          format: html
          disable_web_page_preview: true
